/******************************
トップページ　ヒーロー
******************************/
@use "../../foundation/forwards" as *;
@use "sass:math";

.p-hero {
  width: 100%;
  height: 667px;        // SP 高さ固定
  overflow: hidden;

  .swiper { height: 100%; }

  .swiper-slide { height: 100%; }

  .slide-media {
    position: relative;
    height: 100%;
    overflow: hidden;

    /* --- 位置決めは親（slide-media）で --- */
    /* 画像の --hero-x を読み取り、親を左右にオフセットする */
    /* ここでは img のカスタムプロパティを参照するため :has() を使わない設計にします */
  }

  .p-hero__img {
    position: absolute;
    top: 0;

    /* SP: 縦100%基準で横はみ出し（上下は常に見える） */
    height: 100%;
    width: auto;
    max-width: none;

    /* --- 位置は img 自身のカスタムプロパティから算出 --- */
    left: 50%;
    transform: translateX(calc(-1 * var(--hero-x, 50%))); // 画像の幅基準で移動
    transform-origin: center center;   // ズームの支点を中央に
    transition: transform 6s ease;     // ズーム用のみ（位置は固定）
  }

  /* アクティブ時：ズームだけを子に適用（位置は変えない） */
  .swiper-slide[class*=-active] .p-hero__img {
    transform: translateX(calc(-1 * var(--hero-x, 50%))) scale(1.05);
  }
}


/* PC/Tab は幅基準に戻す（必要な箇所だけ上書き） */
@include mq("tab") {
  .p-hero {
    height: auto; aspect-ratio: 1440 / 823;

    .slide-media .p-hero__img {
      position: static;
      width: 100%; height: auto;
      transform: none;
    }
    .swiper-slide[class*=-active] .slide-media .p-hero__img {
      transform: scale(1.05);
    }
  }
}