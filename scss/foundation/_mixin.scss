/******************************
mixin
******************************/
@use "sass:math";
@use "sass:map";

///pxからremを算出
$base-font-size: 16;

@function rem($px) {
  @return math.div($px, $base-font-size) * 1rem;
}

/// メディアクエリ  (min‑width ベース = SPファースト)
$breakpoint: (
  sp: 'screen and (max-width: 767px)',
  tab: 'screen and (min-width: 768px)',
  pc: 'screen and (min-width: 1025px)'
);

@mixin mq($bp) {
  @media #{map-get($breakpoint, $bp)} {
   @content;
  }
}
//使用例 
@include mq(tab) {
  background-color: #ffbebe;
}

/// コンテナクエリ共通
@mixin cq($container-name, $min-width) {
  @supports (container-type: inline-size) {
    @container #{$container-name} (min-width: #{$min-width}) {
      @content;
    }
  }
}
//使用例
//@include cq(main, 744px) {
//  .p-section {
//    font-size: 1.4rem;
//  }
//}

///pxからvwを算出
$pcDesignSize: 1440;
$tabDesignSize: 768;
$spDesignSize: 375;

//PCデザイン用
@function pc-vw($pixelsVw) {
    @return math.div($pixelsVw , $pcDesignSize) * 100vw;
}

//tabletデザイン用
@function tab-vw($pixelsVw) {
    @return math.div($pixelsVw , $tabDesignSize) * 100vw;
}

//SPデザイン用
@function sp-vw($pixelsVw) {
    @return math.div($pixelsVw , $spDesignSize) * 100vw;
}


///Min-Max-Value Interpolation
@function rclamp($min, $max, $minViewport, $maxViewport) {
  $vwScale: ($max - $min) / ($maxViewport - $minViewport);  // vw単位でのスケールを計算
  $baseOffset: $min - $minViewport * $vwScale;  // 基準となる最小値からのオフセットを計算

  $minRem: $min / 16;  // 最小値をremに変換
  $maxRem: $max / 16;  // 最大値をremに変換
  $baseOffsetRem: $baseOffset / 16;  // オフセットをremに変換
  $vwScaleRem: $vwScale * 100;  // vwスケールを調整

  @return clamp(#{$minRem}rem, #{$baseOffsetRem}rem + #{$vwScaleRem}vw, #{$maxRem}rem);
}

// 使用例
//.example {
//  font-size: rclamp(24, 64, 375, 1440);
//}


///コンテナクエリ用 min-max
// 単位をはぎ取る
@function to-num($v) {
  @return if(unitless($v), $v, math.div($v, 1px));
}

/*  744px→$minPx, 1160px→$maxPx を px で返す clamp()  */
@function cqClampPx(
  $minPx, $maxPx,
  $minW: 744px, $maxW: 1160px
) {
  $min   : to-num($minPx);
  $max   : to-num($maxPx);
  $minWn : to-num($minW);
  $maxWn : to-num($maxW);

  $slope : ($max - $min) / ($maxWn - $minWn);    // unitless
  $base  : $min - $slope * $minWn;               // unitless
  $k     : $slope * 100;                         // unitless (px per cqw)

  @return clamp(
    #{$min}px,
    calc(#{$base}px + #{$k}cqw),
    #{$max}px
  );
}
